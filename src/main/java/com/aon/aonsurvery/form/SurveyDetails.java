package com.aon.aonsurvery.form ;


import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
//import net.proteanit.sql.DbUtils;



import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.IOException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.management.Query.lt;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import jxl.Cell;

import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;

//import com.opensymphony.xwork2.ActionSupport;
import java.sql.DriverManager;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;
import org.apache.poi.ss.usermodel.Row;

public final class SurveyDetails extends javax.swing.JFrame {
Connection con=null;
ResultSet rs=null;
PreparedStatement pst=null;
String filename1;


// jTable details

 //static JTable table;
 //static JScrollPane scroll;
 // header is Vector contains table Column
 static Vector headers = new Vector();
 // Model is used to construct JTable
 static DefaultTableModel model = null;
 // data is Vector contains Data from Excel File
 static Vector data = new Vector();
 //static JButton jbClick;
 //static JFileChooser jChooser;
 static int tableWidth = 0; // set the tableWidth
 static int tableHeight = 0; // set the tableHeight

 


 /**
     * Creates new form SurveyDetails
     */
    public SurveyDetails() {
        initComponents();
        //Get_Data();
        Get_Data2();
        //excelTojTable();
        //new excelTojTable();
        //setLocationRelativeTo(null);
        Toolkit tk = Toolkit.getDefaultToolkit();
      int xsize = (int) tk.getScreenSize().getWidth();
      int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, 700);
        this.setResizable(true);
        
        /* JLabel surveyid = new JLabel();
         JLabel surveyname = new JLabel(); 
        String sid = surveyid.getText();
        String sname = surveyname.getText();
        
        String ssid = "222";
        String sssname = "Sanjay";
        */
    
    }
  
public void Get_Data2()
{
    //String surveyname11 = Survey.txtSurveyName.getText();
    String surveyname = Survey.txtSurveyName.getText();
    File file =new File("C:\\uploads\\"+surveyname+".xls");
    
     fillData(file);
     model = new DefaultTableModel(data, headers);
     tableWidth = model.getColumnCount() 
       * 150;
     tableHeight = model.getRowCount() 
       * 25;
     jTable1.setPreferredSize(new Dimension(tableWidth, tableHeight));
 
     jTable1.setModel(model);
    

  //jTable1 = new JTable();
  jTable1.setAutoCreateRowSorter(true);
  model = new DefaultTableModel(data, headers);

  jTable1.setModel(model);
  jTable1.setBackground(Color.white);

  jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
  jTable1.setEnabled(true);
  jTable1.setRowHeight(25);
  jTable1.setRowMargin(4);

  tableWidth = model.getColumnCount() * 150;
  tableHeight = model.getRowCount() * 25;
  jTable1.setPreferredSize(new Dimension(tableWidth, tableHeight));
  
System.out.println("File uploaded1, this is : "+surveyname);
}   
    
void fillData(File file) {
    System.out.println("File uploaded2"+file);
  Workbook workbook = null;
  try {
   try {
    workbook = Workbook.getWorkbook(file);
   } catch (IOException ex) {
    Logger.getLogger(
      SurveyDetails.class.getName()).log(Level.SEVERE, null, ex);
   }
   Sheet sheet = workbook.getSheet(0);
   
   headers.clear();
   //int i;
  // int 1t;
   for (int i = 0; i < sheet.getColumns(); i++) {
    Cell cell1 = sheet.getCell(i, 0);
    headers.add(cell1.getContents());
   }

   data.clear();
   for (int j = 1; j < sheet.getRows(); j++) {
    Vector d = new Vector();
    for (int i = 0; i < sheet.getColumns(); i++) {

     Cell cell = sheet.getCell(i, j);
     
     d.add(cell.getContents());

    }
    d.add("\n");
    data.add(d);
   }
  } catch (BiffException e) {
      System.out.println("File uploadedn");
  }
 }    


//private String surveyid;

  
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        AttachAction = new javax.swing.JButton();
        Save_FileAction = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Document_path = new javax.swing.JTextField();
        btnDownloadSurveyData = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Survey Details");
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        AttachAction.setText("Attach");
        AttachAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttachActionActionPerformed(evt);
            }
        });

        Save_FileAction.setText("Upload File");
        Save_FileAction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_FileActionActionPerformed(evt);
            }
        });

        jButton1.setText("Empty All Records");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Save_FileAction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(AttachAction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AttachAction)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Save_FileAction)
                .addGap(47, 47, 47)
                .addComponent(jButton1)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        btnDownloadSurveyData.setText("View Excel");
        btnDownloadSurveyData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDownloadSurveyDataMouseClicked(evt);
            }
        });
        btnDownloadSurveyData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadSurveyDataActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Document_path, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 403, Short.MAX_VALUE)
                        .addComponent(btnDownloadSurveyData)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(61, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Document_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDownloadSurveyData))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 512, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    

    //-----Get_Data()Start------------------
    /*
    private void Get_Data(){
     
    
     con=Connect.ConnectDB();
        String sql="select SURVEY_NAME as [C], Column1 as [D], Column2 as [E], Column3 as [F], Column4 as [G], Column5 as [H], Column6 as [I], Column7 as [J], Column8 as [K], Column9 as [L], Column10 as [M], Column11 as [N], Column12 as [O], Column13 as [P], Column14 as [Q], Column15 as [R], Column16 as [S], Column17 as [T], Column18 as [U], Column19 as [V], Column20 as [W], Column21 as [X], Column22 as [Y], Column23 as [Z], Column24 as [AA], Column25 as [AB], Column26 as [AC], Column27 as [AD], Column28 as [AE], Column29 as [AF], Column30 as [AG], Column31 as [AH], Column32 as [AI], Column33 as [AJ], Column34 as [AK], Column35 as [AL], Column36 as [AM], Column37 as [AN], Column38 as [AO], Column39 as [AP], Column40 as [AQ], Column41 as [AR], Column42 as [AS], Column43 as [AT], Column44 as [AU], Column45 as [AV], Column46 as [AW], Column47 as [AX], Column48 as [AY], Column49 as [AZ], Column50 as [BA], Column51 as [BB], Column52 as [BC], Column53 as [BD], Column54 as [BE], Column55 as [BF], Column56 as [BG], Column57 as [BH], Column58 as [BI], Column59 as [BJ], Column60 as [BK], Column61 as [BL], Column62 as [BM], Column63 as [BN], Column64 as [BO], Column65 as [BP], Column66 as [BQ], Column67 as [BR], Column68 as [BS], Column69 as [BT], Column70 as [BU], Column71 as [BV], Column72 as [BW], Column73 as [BX], Column74 as [BY], Column75 as [BZ], Column76 as [CA], Column77 as [CB], Column78 as [CC], Column79 as [CD], Column80 as [CE], Column81 as [CF], Column82 as [CG], Column83 as [CH], Column84 as [CI], Column85 as [CJ], Column86 as [CK], Column87 as [CL], Column88 as [CM], Column89 as [CN], Column90 as [CO], Column91 as [CP], Column92 as [CQ], Column93 as [CR], Column94 as [CS], Column95 as [CT], Column96 as [CU], Column97 as [CV], Column98 as [CW], Column99 as [CX], Column100 as [CY], Column101 as [CZ], Column102 as [DA], Column103 as [DB], Column104 as [DC], Column105 as [DD], Column106 as [DE], Column107 as [DF], Column108 as [DG] from SurveyData order by ID";
          try{
         pst=con.prepareStatement(sql);
          rs= pst.executeQuery();
         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         //jTable1.repaint(); 
         //tableModel.fireTableDataChanged();
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
         
}
          
    }
    */
     //-----Get_Data()end------------------
    
    
    
 


    
    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
     
    }//GEN-LAST:event_formMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    this.hide();
    Survey frm = new Survey();
    frm.setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       /*
        try{
            con=Connect.ConnectDB();
            this.hide();
            Survey frm= new Survey();
            frm.setVisible(true);
            int row= jTable1.getSelectedRow();
             String add= jTable1.getModel().getValueAt(row,0).toString();
             frm.txtSurveyID.setText(add);
             String add1= jTable1.getModel().getValueAt(row,1).toString();
             frm.txtSurveyName.setText(add1);
             String add2= jTable1.getModel().getValueAt(row,2).toString();
            // frm.SurveysDescription.setText(add2);
             String add3= jTable1.getModel().getValueAt(row,3).toString();
             frm.txtCreationDate.setText(add3);
             String add4= jTable1.getModel().getValueAt(row,4).toString();
             frm.txtExpiryDate.setText(add4);
             String add5= jTable1.getModel().getValueAt(row,5).toString();
             frm.textField3.setText(add5);
             String add6= jTable1.getModel().getValueAt(row,6).toString();
             frm.ComboBoxIsOpen.getSelectedItem();
             
             frm.btnUpdate.setEnabled(true);
             frm.btnDelete.setEnabled(true);
             frm.btnSave.setEnabled(false);

        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }*/
    }//GEN-LAST:event_jTable1MouseClicked
                
   
    
    private void Save_FileActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_FileActionActionPerformed
        // TODO add your handling code here:
       
        
        
        InputStream inStream = null;
	OutputStream outStream = null;
 
    	try{
            String surveyname = Survey.txtSurveyName.getText();
            
            String surveynamewx = surveyname+".xls";
            
            File afile =new File(filename1);
            
            File newfilename =new File(surveynamewx);
            
            //String newfilename = afile.renameTo("sss");
            
    	    File bfile =new File("C:\\uploads\\" + newfilename.getName());
 
    	    inStream = new FileInputStream(afile);
    	    outStream = new FileOutputStream(bfile);
 
    	    byte[] buffer = new byte[1024];
 
    	    int length;
    	    //copy the file content in bytes 
    	    while ((length = inStream.read(buffer)) > 0){
 
    	    	outStream.write(buffer, 0, length);
 
    	    }
 
    	    inStream.close();
    	    outStream.close();
 
    	    //delete the original file
    	    //afile.delete();
 
    	    System.out.println("File is copied successful! in Survey :"+surveyname);
 
    	}catch(IOException e){
    	    e.printStackTrace();
    	}
        
        // to delete the old data of the survey
        
        
        try {
             String surveyname = Survey.txtSurveyName.getText();
           con=Connect.ConnectDB();
           String sql2="DELETE * from SurveyData where SurveyName =" + surveyname + "";
           
           pst=con.prepareStatement(sql2);
                    pst.executeUpdate();
            con.close();
        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }
        
        
        try {
            String surveyname = Survey.txtSurveyName.getText();
            con=Connect.ConnectDB();
            
            //con.setAutoCommit(false);
            //com.mysql.jdbc.PreparedStatement pstm = null;
            FileInputStream input = new FileInputStream(filename1);
            POIFSFileSystem fs = new POIFSFileSystem(input);
            HSSFWorkbook wb = new HSSFWorkbook(fs);
            HSSFSheet sheet = wb.getSheetAt(0);
            Row row;
            for (int i = 0; i <= sheet.getLastRowNum(); i++) {
                row = sheet.getRow(i);
                    String d0 = row.getCell(0).toString();
                    String d1 = row.getCell(1).toString();
                    String d2 = row.getCell(2).toString();
                    String d3 = row.getCell(3).toString();
                    String d4 = row.getCell(4).toString();
                    String d5 = row.getCell(5).toString();
                    String d6 = row.getCell(6).toString();
                    String d7 = row.getCell(7).toString();
                    String d8 = row.getCell(8).toString();
                    String d9 = row.getCell(9).toString();
                    String d10 = row.getCell(10).toString();
                    String d11 = row.getCell(11).toString();
                    String d12 = row.getCell(12).toString();
                    String d13 = row.getCell(13).toString();
                    String d14 = row.getCell(14).toString();
                    String d15 = row.getCell(15).toString();
                    String d16 = row.getCell(16).toString();
                    String d17 = row.getCell(17).toString();
                    String d18 = row.getCell(18).toString();
                    String d19 = row.getCell(19).toString();
                    String d20 = row.getCell(20).toString();
                    String d21 = row.getCell(21).toString();
                    String d22 = row.getCell(22).toString();
                    String d23 = row.getCell(23).toString();
                    String d24 = row.getCell(24).toString();
                    String d25 = row.getCell(25).toString();
                    String d26 = row.getCell(26).toString();
                    String d27 = row.getCell(27).toString();
                    String d28 = row.getCell(28).toString();
                    String d29 = row.getCell(29).toString();
                    String d30 = row.getCell(30).toString();
                    String d31 = row.getCell(31).toString();
                    String d32 = row.getCell(32).toString();
                    String d33 = row.getCell(33).toString();
                    String d34 = row.getCell(34).toString();
                    String d35 = row.getCell(35).toString();
                    String d36 = row.getCell(36).toString();
                    String d37 = row.getCell(37).toString();
                    String d38 = row.getCell(38).toString();
                    String d39 = row.getCell(39).toString();
                    String d40 = row.getCell(40).toString();
                    String d41 = row.getCell(41).toString();
                    String d42 = row.getCell(42).toString();
                    String d43 = row.getCell(43).toString();
                    String d44 = row.getCell(44).toString();
                    String d45 = row.getCell(45).toString();
                    String d46 = row.getCell(46).toString();
                    String d47 = row.getCell(47).toString();
                    String d48 = row.getCell(48).toString();
                    String d49 = row.getCell(49).toString();
                    String d50 = row.getCell(50).toString();
                    String d51 = row.getCell(51).toString();
                    String d52 = row.getCell(52).toString();
                    String d53 = row.getCell(53).toString();
                    String d54 = row.getCell(54).toString();
                    String d55 = row.getCell(55).toString();
                    String d56 = row.getCell(56).toString();
                    String d57 = row.getCell(57).toString();
                    String d58 = row.getCell(58).toString();
                    String d59 = row.getCell(59).toString();
                    String d60 = row.getCell(60).toString();
                    String d61 = row.getCell(61).toString();
                    String d62 = row.getCell(62).toString();
                    String d63 = row.getCell(63).toString();
                    String d64 = row.getCell(64).toString();
                    String d65 = row.getCell(65).toString();
                    String d66 = row.getCell(66).toString();
                    String d67 = row.getCell(67).toString();
                    String d68 = row.getCell(68).toString();
                    String d69 = row.getCell(69).toString();
                    String d70 = row.getCell(70).toString();
                    String d71 = row.getCell(71).toString();
                    String d72 = row.getCell(72).toString();
                    String d73 = row.getCell(73).toString();
                    String d74 = row.getCell(74).toString();
                    String d75 = row.getCell(75).toString();
                    String d76 = row.getCell(76).toString();
                    String d77 = row.getCell(77).toString();
                    String d78 = row.getCell(78).toString();
                    String d79 = row.getCell(79).toString();
                    String d80 = row.getCell(80).toString();
                    String d81 = row.getCell(81).toString();
                    String d82 = row.getCell(82).toString();
                    String d83 = row.getCell(83).toString();
                    String d84 = row.getCell(84).toString();
                    String d85 = row.getCell(85).toString();
                    String d86 = row.getCell(86).toString();
                    String d87 = row.getCell(87).toString();
                    String d88 = row.getCell(88).toString();
                    String d89 = row.getCell(89).toString();
                    String d90 = row.getCell(90).toString();
                    String d91 = row.getCell(91).toString();
                    String d92 = row.getCell(92).toString();
                    String d93 = row.getCell(93).toString();
                    String d94 = row.getCell(94).toString();
                    String d95 = row.getCell(95).toString();
                    String d96 = row.getCell(96).toString();
                    String d97 = row.getCell(97).toString();
                    String d98 = row.getCell(98).toString();
                    String d99 = row.getCell(99).toString();
                    String d100 = row.getCell(100).toString();
                    String d101 = row.getCell(101).toString();
                    String d102 = row.getCell(102).toString();
                    String d103 = row.getCell(103).toString();
                    String d104 = row.getCell(104).toString();
                    String d105 = row.getCell(105).toString();
                    String d106 = row.getCell(106).toString();
                    String d107 = row.getCell(107).toString();
                    String d108 = row.getCell(108).toString();
                    String d109 = row.getCell(109).toString();
                    String d110 = row.getCell(110).toString();
                    String d111 = row.getCell(111).toString();
                    String d112 = row.getCell(112).toString();
                    String d113 = row.getCell(113).toString();
                    String d114 = row.getCell(114).toString();
                    String d115 = row.getCell(115).toString();
                    String d116 = row.getCell(116).toString();
                    String d117 = row.getCell(117).toString();
                    String d118 = row.getCell(118).toString();
                    String d119 = row.getCell(119).toString();
                    String d120 = row.getCell(120).toString();
                    String d121 = row.getCell(121).toString();
                    String d122 = row.getCell(122).toString();
                    String d123 = row.getCell(123).toString();
                    String d124 = row.getCell(124).toString();
                    String d125 = row.getCell(125).toString();
                    String d126 = row.getCell(126).toString();
                    String d127 = row.getCell(127).toString();
                    String d128 = row.getCell(128).toString();
                    String d129 = row.getCell(129).toString();
                    String d130 = row.getCell(130).toString();
                    String d131 = row.getCell(131).toString();
                    String d132 = row.getCell(132).toString();
                    String d133 = row.getCell(133).toString();
                    String d134 = row.getCell(134).toString();
                    String d135 = row.getCell(135).toString();
                    String d136 = row.getCell(136).toString();
                    String d137 = row.getCell(137).toString();
                    String d138 = row.getCell(138).toString();
                    String d139 = row.getCell(139).toString();
                    String d140 = row.getCell(140).toString();
                    String d141 = row.getCell(141).toString();
                    String d142 = row.getCell(142).toString();
                    String d143 = row.getCell(143).toString();
                    String d144 = row.getCell(144).toString();
                    String d145 = row.getCell(145).toString();
                    String d146 = row.getCell(146).toString();
                    String d147 = row.getCell(147).toString();
                    String d148 = row.getCell(148).toString();
                    String d149 = row.getCell(149).toString();
                    String d150 = row.getCell(150).toString();
                  
                //String city = row.getCell(3).getStringCellValue();
                String sql = "INSERT INTO SurveyData (SurveyName,d0,d1,d2,d3,d4,d5,d6,d7,d8,d9,d10,d11,d12,d13,d14,d15,d16,d17,d18,d19,d20,d21,d22,d23,d24,d25,d26,d27,d28,d29,d30,d31,d32,d33,d34,d35,d36,d37,d38,d39,d40,d41,d42,d43,d44,d45,d46,d47,d48,d49,d50,d51,d52,d53,d54,d55,d56,d57,d58,d59,d60,d61,d62,d63,d64,d65,d66,d67,d68,d69,d70,d71,d72,d73,d74,d75,d76,d77,d78,d79,d80,d81,d82,d83,d84,d85,d86,d87,d88,d89,d90,d91,d92,d93,d94,d95,d96,d97,d98,d99,d100,d101,d102,d103,d104,d105,d106,d107,d108,d109,d110,d111,d112,d113,d114,d115,d116,d117,d118,d119,d120,d121,d122,d123,d124,d125,d126,d127,d128,d129,d130,d131,d132,d133,d134,d135,d136,d137,d138,d139,d140,d141,d142,d143,d144,d145,d146,d147,d148,d149,d150) VALUES('" + surveyname + "','" + d0 + "','" + d1 + "','" + d2 + "','" + d3 + "','" + d4 + "','" + d5 + "','" + d6 + "','" + d7 + "','" + d8 + "','" + d9 + "','" + d10 + "','" + d11 + "','" + d12 + "','" + d13 + "','" + d14 + "','" + d15 + "','" + d16 + "','" + d17 + "','" + d18 + "','" + d19 + "','" + d20 + "','" + d21 + "','" + d22 + "','" + d23 + "','" + d24 + "','" + d25 + "','" + d26 + "','" + d27 + "','" + d28 + "','" + d29 + "','" + d30 + "','" + d31 + "','" + d32 + "','" + d33 + "','" + d34 + "','" + d35 + "','" + d36 + "','" + d37 + "','" + d38 + "','" + d39 + "','" + d40 + "','" + d41 + "','" + d42 + "','" + d43 + "','" + d44 + "','" + d45 + "','" + d46 + "','" + d47 + "','" + d48 + "','" + d49 +"','" + d50 + "','" + d51 + "','" + d52 + "','" + d53 + "','" + d54 + "','" + d55 + "','" + d56 + "','" + d57 + "','" + d58 + "','" + d59 + "','" + d60 + "','" + d61 + "','" + d62 + "','" + d63 + "','" + d64 + "','" + d65 + "','" + d66 + "','" + d67 + "','" + d68 + "','" + d69 + "','" + d70 + "','" + d71 + "','" + d72 + "','" + d73 + "','" + d74 + "','" + d75 + "','" + d76 + "','" + d77 + "','" + d78 + "','" + d79 + "','" + d80 + "','" + d81 + "','" + d82 + "','" + d83 + "','" + d84 + "','" + d85 + "','" + d86 + "','" + d87 + "','" + d88 + "','" + d89 + "','" + d90 + "','" + d91 + "','" + d92 + "','" + d93 + "','" + d94 + "','" + d95 + "','" + d96 + "','" + d97 + "','" + d98 + "','" + d99 + "','" + d100 + "','" + d101 + "','" + d102 + "','" + d103 + "','" + d104 + "','" + d105 + "','" + d106 + "','" + d107 + "','" + d108 + "','" + d109 + "','" + d110 + "','" + d111 + "','" + d112 + "','" + d113 + "','" + d114 + "','" + d115 + "','" + d116 + "','" + d117 + "','" + d118 + "','" + d119 + "','" + d120 + "','" + d121 + "','" + d122 + "','" + d123 + "','" + d124 + "','" + d125 + "','" + d126 + "','" + d127 + "','" + d128 + "','" + d129 + "','" + d130 + "','" + d131 + "','" + d132 + "','" + d133 + "','" + d134 + "','" + d135 + "','" + d136 + "','" + d137 + "','" + d138 + "','" + d139 + "','" + d140 + "','" + d141 + "','" + d142 + "','" + d143 + "','" + d144 + "','" + d145 + "','" + d146 + "','" + d147 + "','" + d148 + "','" + d149 + "','" + d150 + "')";
               pst=con.prepareStatement(sql);
               pst.executeUpdate();
                System.out.println("Import rows " + (i + 1));
            }

            con.commit();
            //pstm.close();
            con.close();
            input.close();
            System.out.println("Success import excel to mysql table");
        } catch (SQLException ex) {
            System.out.println(ex);
            
            System.out.println("Error A");
        } catch (IOException ioe) {
            System.out.println(ioe);
            System.out.println("Error B");
        }

        
        
        
       // import to access
        
        /*
        try {
            
             con=Connect.ConnectDB();
            
            try (FileInputStream input = new FileInputStream(filename1)) {
                POIFSFileSystem fs = new POIFSFileSystem(input);
                HSSFWorkbook wb = new HSSFWorkbook(fs);
                HSSFSheet sheet = wb.getSheetAt(0);
                Row row;
                for (int i = 0; i <= sheet.getLastRowNum(); i++) {
                    row = sheet.getRow(i);
                    String d0 = row.getCell(0).toString();
                    String d1 = row.getCell(1).toString();
                    String d2 = row.getCell(2).toString();
                    String d3 = row.getCell(3).toString();
                    String d4 = row.getCell(4).toString();
                    String d5 = row.getCell(5).toString();
                    String d6 = row.getCell(6).toString();
                    String d7 = row.getCell(7).toString();
                    String d8 = row.getCell(8).toString();
                    String d9 = row.getCell(9).toString();
                    String d10 = row.getCell(10).toString();
                    String d11 = row.getCell(11).toString();
                    String d12 = row.getCell(12).toString();
                    String d13 = row.getCell(13).toString();
                    String d14 = row.getCell(14).toString();
                    String d15 = row.getCell(15).toString();
                    String d16 = row.getCell(16).toString();
                    String d17 = row.getCell(17).toString();
                    String d18 = row.getCell(18).toString();
                    String d19 = row.getCell(19).toString();
                    String d20 = row.getCell(20).toString();
                    String d21 = row.getCell(21).toString();
                    String d22 = row.getCell(22).toString();
                    String d23 = row.getCell(23).toString();
                    String d24 = row.getCell(24).toString();
                    String d25 = row.getCell(25).toString();
                    String d26 = row.getCell(26).toString();
                    String d27 = row.getCell(27).toString();
                    String d28 = row.getCell(28).toString();
                    String d29 = row.getCell(29).toString();
                    String d30 = row.getCell(30).toString();
                    String d31 = row.getCell(31).toString();
                    String d32 = row.getCell(32).toString();
                    String d33 = row.getCell(33).toString();
                    String d34 = row.getCell(34).toString();
                    String d35 = row.getCell(35).toString();
                    String d36 = row.getCell(36).toString();
                    String d37 = row.getCell(37).toString();
                    String d38 = row.getCell(38).toString();
                    String d39 = row.getCell(39).toString();
                    String d40 = row.getCell(40).toString();
                    String d41 = row.getCell(41).toString();
                    String d42 = row.getCell(42).toString();
                    String d43 = row.getCell(43).toString();
                    String d44 = row.getCell(44).toString();
                    String d45 = row.getCell(45).toString();
                    String d46 = row.getCell(46).toString();
                    String d47 = row.getCell(47).toString();
                    String d48 = row.getCell(48).toString();
                    String d49 = row.getCell(49).toString();
                    String d50 = row.getCell(50).toString();
                    String d51 = row.getCell(51).toString();
                    String d52 = row.getCell(52).toString();
                    String d53 = row.getCell(53).toString();
                    String d54 = row.getCell(54).toString();
                    String d55 = row.getCell(55).toString();
                    String d56 = row.getCell(56).toString();
                    String d57 = row.getCell(57).toString();
                    String d58 = row.getCell(58).toString();
                    String d59 = row.getCell(59).toString();
                    String d60 = row.getCell(60).toString();
                    String d61 = row.getCell(61).toString();
                    String d62 = row.getCell(62).toString();
                    String d63 = row.getCell(63).toString();
                    String d64 = row.getCell(64).toString();
                    String d65 = row.getCell(65).toString();
                    String d66 = row.getCell(66).toString();
                    String d67 = row.getCell(67).toString();
                    String d68 = row.getCell(68).toString();
                    String d69 = row.getCell(69).toString();
                    String d70 = row.getCell(70).toString();
                    String d71 = row.getCell(71).toString();
                    String d72 = row.getCell(72).toString();
                    String d73 = row.getCell(73).toString();
                    String d74 = row.getCell(74).toString();
                    String d75 = row.getCell(75).toString();
                    String d76 = row.getCell(76).toString();
                    String d77 = row.getCell(77).toString();
                    String d78 = row.getCell(78).toString();
                    String d79 = row.getCell(79).toString();
                    String d80 = row.getCell(80).toString();
                    String d81 = row.getCell(81).toString();
                    String d82 = row.getCell(82).toString();
                    String d83 = row.getCell(83).toString();
                    String d84 = row.getCell(84).toString();
                    String d85 = row.getCell(85).toString();
                    String d86 = row.getCell(86).toString();
                    String d87 = row.getCell(87).toString();
                    String d88 = row.getCell(88).toString();
                    String d89 = row.getCell(89).toString();
                    String d90 = row.getCell(90).toString();
                    String d91 = row.getCell(91).toString();
                    String d92 = row.getCell(92).toString();
                    String d93 = row.getCell(93).toString();
                    String d94 = row.getCell(94).toString();
                    String d95 = row.getCell(95).toString();
                    String d96 = row.getCell(96).toString();
                    String d97 = row.getCell(97).toString();
                    String d98 = row.getCell(98).toString();
                    String d99 = row.getCell(99).toString();
                    /*String d100 = row.getCell(100).toString();
                    String d101 = row.getCell(101).toString();
                    String d102 = row.getCell(102).toString();
                    String d103 = row.getCell(103).toString();
                    String d104 = row.getCell(104).toString();
                    String d105 = row.getCell(105).toString();
                    String d106 = row.getCell(106).toString();
                    String d107 = row.getCell(107).toString();
                    String d108 = row.getCell(108).toString();
                    String d109 = row.getCell(109).toString();
                    String d110 = row.getCell(110).toString();
                    String d111 = row.getCell(111).toString();
                    String d112 = row.getCell(112).toString();
                    String d113 = row.getCell(113).toString();
                    String d114 = row.getCell(114).toString();
                    String d115 = row.getCell(115).toString();
                    String d116 = row.getCell(116).toString();
                    String d117 = row.getCell(117).toString();
                    String d118 = row.getCell(118).toString();
                    String d119 = row.getCell(119).toString();
                    String d120 = row.getCell(120).toString();
                    String d121 = row.getCell(121).toString();
                    String d122 = row.getCell(122).toString();
                    String d123 = row.getCell(123).toString();
                    String d124 = row.getCell(124).toString();
                    String d125 = row.getCell(125).toString();
                    String d126 = row.getCell(126).toString();
                    String d127 = row.getCell(127).toString();
                    String d128 = row.getCell(128).toString();
                    String d129 = row.getCell(129).toString();
                    String d130 = row.getCell(130).toString();
                    String d131 = row.getCell(131).toString();
                    String d132 = row.getCell(132).toString();
                    String d133 = row.getCell(133).toString();
                    String d134 = row.getCell(134).toString();
                    String d135 = row.getCell(135).toString();
                    String d136 = row.getCell(136).toString();
                    String d137 = row.getCell(137).toString();
                    String d138 = row.getCell(138).toString();
                    String d139 = row.getCell(139).toString();
                    String d140 = row.getCell(140).toString();
                    String d141 = row.getCell(141).toString();
                    String d142 = row.getCell(142).toString();
                    String d143 = row.getCell(143).toString();
                    String d144 = row.getCell(144).toString();
                    String d145 = row.getCell(145).toString();
                    String d146 = row.getCell(146).toString();
                    String d147 = row.getCell(147).toString();
                    String d148 = row.getCell(148).toString();
                    String d149 = row.getCell(149).toString();
                    String d150 = row.getCell(150).toString();
                    String d151 = row.getCell(151).toString();
                    String d152 = row.getCell(152).toString();
                    String d153 = row.getCell(153).toString();
                    String d154 = row.getCell(154).toString();
                    String d155 = row.getCell(155).toString();
                    String d156 = row.getCell(156).toString();
                    String d157 = row.getCell(157).toString();
                    String d158 = row.getCell(158).toString();
                    String d159 = row.getCell(159).toString();
                    String d160 = row.getCell(160).toString();
                    String d161 = row.getCell(161).toString();
                    String d162 = row.getCell(162).toString();
                    String d163 = row.getCell(163).toString();
                    String d164 = row.getCell(164).toString();
                    String d165 = row.getCell(165).toString();
                    String d166 = row.getCell(166).toString();
                    String d167 = row.getCell(167).toString();
                    String d168 = row.getCell(168).toString();
                    String d169 = row.getCell(169).toString();
                    String d170 = row.getCell(170).toString();
                    String d171 = row.getCell(171).toString();
                    String d172 = row.getCell(172).toString();
                    String d173 = row.getCell(173).toString();
                    String d174 = row.getCell(174).toString();
                    String d175 = row.getCell(175).toString();
                    String d176 = row.getCell(176).toString();
                    String d177 = row.getCell(177).toString();
                    String d178 = row.getCell(178).toString();
                    String d179 = row.getCell(179).toString();
                    String d180 = row.getCell(180).toString();
                    String d181 = row.getCell(181).toString();
                    String d182 = row.getCell(182).toString();
                    String d183 = row.getCell(183).toString();
                    String d184 = row.getCell(184).toString();
                    String d185 = row.getCell(185).toString();
                    String d186 = row.getCell(186).toString();
                    String d187 = row.getCell(187).toString();
                    String d188 = row.getCell(188).toString();
                    String d189 = row.getCell(189).toString();
                    String d190 = row.getCell(190).toString();
                    String d191 = row.getCell(191).toString();
                    String d192 = row.getCell(192).toString();
                    String d193 = row.getCell(193).toString();
                    String d194 = row.getCell(194).toString();
                    String d195 = row.getCell(195).toString();
                    String d196 = row.getCell(196).toString();
                    String d197 = row.getCell(197).toString();
                    String d198 = row.getCell(198).toString();
                    String d199 = row.getCell(199).toString();
                    String d200 = row.getCell(200).toString();
                    
                    //String city = row.getCell(3).getStringCellValue();
                    String sql = "INSERT INTO SurveyData VALUES('" + d0 + "','" + d1 + "','" + d2 + "','" + d3 + "','" + d4 + "','" + d5 + "','" + d6 + "','" + d7 + "','" + d8 + "','" + d9 + "','" + d10 + "','" + d11 + "','" + d12 + "','" + d13 + "','" + d14 + "','" + d15 + "','" + d16 + "','" + d17 + "','" + d18 + "','" + d19 + "'','" +  d20 + "','" + d21 + "','" + d22 + "','" + d23 + "','" + d24 + "','" + d25 + "','" + d26 + "','" + d27 + "','" + d28 + "','" + d29 + "','" + d30 + "','" + d31 + "','" + d32 + "','" + d33 + "','" + d34 + "','" + d35 + "','" + d36 + "','" + d37 + "','" + d38 + "','" + d39 + "','" + d40 + "','" + d41 + "','" + d42 + "','" + d43 + "','" + d44 + "','" + d45 + "','" + d46 + "','" + d47 + "','" + d48 + "','" + d49 + "','" + d50 + "','" + d51 + "','" + d52 + "','" + d53 + "','" + d54 + "','" + d55 + "','" + d56 + "','" + d57 + "','" + d58 + "','" + d59 + "','" + d60 + "','" + d61 + "','" + d62 + "','" + d63 + "','" + d64 + "','" + d65 + "','" + d66 + "','" + d67 + "','" + d68 + "','" + d69 + "','" + d70 + "','" + d71 + "','" + d72 + "','" + d73 + "','" + d74 + "','" + d75 + "','" + d76 + "','" + d77 + "','" + d78 + "','" + d79 + "','" + d80 + "','" + d81 + "','" + d82 + "','" + d83 + "','" + d84 + "'," + d85 + "','" + d86 + "','" + d87 + "','" + d88 + "','" + d89 + "','" + d90 + "','" + d91 + "','" + d92 + "','" + d93 + "','" + d94 + "','" + d95 + "','" + d96 + "','" + d97 + "','" + d98 + "','" + d99 + "')"; //,'" + 100 + "','" + 101 + "','" + 102 + "','" + 103 + "','" + 104 + "','" + 105 + "','" + 106 + "','" + 107 + "','" + 108 + "','" + 109 + "','" + 110 + "','" + 111 + "','" + 112 + "','" + 113 + "','" + 114 + "','" + 115 + "','" + 116 + "','" + 117 + "','" + 118 + "','" + 119 + "','" + 120 + "','" + 121 + "','" + 122 + "','" + 123 + "','" + 124 + "','" + 125 + "','" + 126 + "','" + 127 + "','" + 128 + "','" + 129 + "','" + 130 + "','" + 131 + "','" + 132 + "','" + 133 + "','" + 134 + "','" + 135 + "','" + 136 + "','" + 137 + "','" + 138 + "','" + 139 + "','" + 140 + "','" + 141 + "','" + 142 + "','" + 143 + "','" + 144 + "','" + 145 + "','" + 146 + "','" + 147 + "','" + 148 + "','" + 149 + "','" + 150 + "','" + 151 + "','" + 152 + "','" + 153 + "','" + 154 + "','" + 155 + "','" + 156 + "','" + 157 + "','" + 158 + "','" + 159 + "','" + 160 + "','" + 161 + "','" + 162 + "','" + 163 + "','" + 164 + "','" + 165 + "','" + 166 + "','" + 167 + "','" + 168 + "','" + 169 + "','" + 170 + "','" + 171 + "','" + 172 + "','" + 173 + "','" + 174 + "','" + 175 + "','" + 176 + "','" + 177 + "','" + 178 + "','" + 179 + "','" + 180 + "','" + 181 + "','" + 182 + "','" + 183 + "','" + 184 + "','" + 185 + "','" + 186 + "','" + 187 + "','" + 188 + "','" + 189 + "','" + 190 + "','" + 191 + "','" + 192 + "','" + 193 + "','" + 194 + "','" + 195 + "','" + 196 + "','" + 197 + "','" + 198 + "','" + 199 + "','" + 200 + "'
                    pst=con.prepareStatement(sql);
                    pst.executeUpdate();
                    System.out.println("Import rows " + (i + 1));
                }
                
                con.commit();
                pst.close();
                con.close();
            }
            System.out.println("Success import excel to mysql table");
        } catch (SQLException ex) {
            System.out.println(ex);
        } catch (IOException ioe) {
            System.out.println(ioe);
        }

        
        
        // import to access code end
        /*
       // delete the data of the dable
      try {
           con=Connect.ConnectDB();
           String sql="DELETE * from SurveyData";
           
           pst=con.prepareStatement(sql);
                    pst.executeUpdate();
            con.close();
        } catch (SQLException err) {
            System.out.println(err.getMessage());
        }
       */
        // insert the data into the dable
        /*
        String ssss = Survey.txtSurveyName.getText();
    try{
            try (BufferedReader br = new BufferedReader(new FileReader(filename1))) {
                String line;
         Survey sd = new Survey();
         String si; 
         String sn; 
         String xDouble; 
         si = sd.txtSurveyID.getText(); // sd.txtSurveyID.getText();
         sn = sd.txtSurveyName.getText();
                System.out.println("txtSurveyID-" +si);
                System.out.println("txtSurveyName-" +ssss);
              // String surveyidi = surveyid;
               // String surveynamen = surveyname;
                
               while((line=br.readLine())!=null){
                    String[]value=line.split(",");
                    String sql="insert into SurveyData(SURVEY_ID,SURVEY_NAME,Column1,Column2,Column3,Column4,Column5,Column6,Column7,Column8,Column9,Column10,Column11,Column12,Column13,Column14,Column15,Column16,Column17,Column18,Column19,Column20,Column21,Column22,Column23,Column24,Column25,Column26,Column27,Column28,Column29,Column30,Column31,Column32,Column33,Column34,Column35,Column36,Column37,Column38,Column39,Column40,Column41,Column42,Column43,Column44,Column45,Column46,Column47,Column48,Column49,Column50,Column51,Column52,Column53,Column54,Column55,Column56,Column57,Column58,Column59,Column60,Column61,Column62,Column63,Column64,Column65,Column66,Column67,Column68,Column69,Column70,Column71,Column72,Column73,Column74,Column75,Column76,Column77,Column78,Column79,Column80,Column81,Column82,Column83,Column84,Column85,Column86,Column87,Column88,Column89,Column90,Column91,Column92,Column93,Column94,Column95,Column96,Column97,Column98,Column99,Column100,Column101,Column102,Column103,Column104,Column105,Column106,Column107,Column108)values('"+si+"','"+ssss+"','"+value[0]+"','"+value[1]+"','"+value[2]+"','"+value[3]+"','"+value[4]+"','"+value[5]+"','"+value[6]+"','"+value[7]+"','"+value[8]+"','"+value[9]+"','"+value[10]+"','"+value[11]+"','"+value[12]+"','"+value[13]+"','"+value[14]+"','"+value[15]+"','"+value[16]+"','"+value[17]+"','"+value[18]+"','"+value[19]+"','"+value[20]+"','"+value[21]+"','"+value[22]+"','"+value[23]+"','"+value[24]+"','"+value[25]+"','"+value[26]+"','"+value[27]+"','"+value[28]+"','"+value[29]+"','"+value[30]+"','"+value[31]+"','"+value[32]+"','"+value[33]+"','"+value[34]+"','"+value[35]+"','"+value[36]+"','"+value[37]+"','"+value[38]+"','"+value[39]+"','"+value[40]+"','"+value[41]+"','"+value[42]+"','"+value[43]+"','"+value[44]+"','"+value[45]+"','"+value[46]+"','"+value[47]+"','"+value[48]+"','"+value[49]+"','"+value[50]+"','"+value[51]+"','"+value[52]+"','"+value[53]+"','"+value[54]+"','"+value[55]+"','"+value[56]+"','"+value[57]+"','"+value[58]+"','"+value[59]+"','"+value[60]+"','"+value[61]+"','"+value[62]+"','"+value[63]+"','"+value[64]+"','"+value[65]+"','"+value[66]+"','"+value[67]+"','"+value[68]+"','"+value[69]+"','"+value[70]+"','"+value[71]+"','"+value[72]+"','"+value[73]+"','"+value[74]+"','"+value[75]+"','"+value[76]+"','"+value[77]+"','"+value[78]+"','"+value[79]+"','"+value[80]+"','"+value[81]+"','"+value[82]+"','"+value[83]+"','"+value[84]+"','"+value[85]+"','"+value[86]+"','"+value[87]+"','"+value[88]+"','"+value[89]+"','"+value[90]+"','"+value[91]+"','"+value[92]+"','"+value[93]+"','"+value[94]+"','"+value[95]+"','"+value[96]+"','"+value[97]+"','"+value[98]+"','"+value[99]+"','"+value[100]+"','"+value[101]+"','"+value[102]+"','"+value[103]+"','"+value[104]+"','"+value[105]+"','"+value[106]+"','"+value[107]+"')"; //..........Uploading data here
                    pst=con.prepareStatement(sql);
                    pst.executeUpdate();
                }
            }
            // String sid = surveyid.getText();
            //String sname = surveyname.getText();
        }catch(IOException | SQLException e){
        JOptionPane.showMessageDialog(null, e);
            System.err.println("bad format");
        }   
       
        */
        
        //jTable1.repaint();
        Get_Data2();
        
    }//GEN-LAST:event_Save_FileActionActionPerformed

    private void AttachActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttachActionActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        filename1 = f.getAbsolutePath();
        //String filename1=f.get();
        Document_path.setText(filename1);
    }//GEN-LAST:event_AttachActionActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
       
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void btnDownloadSurveyDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadSurveyDataActionPerformed
        // TODO add your handling code here:
      
 //File file =new File("C:\\uploads\\Mayank.xls");
 //FileInputStream stream = new FileInputStream(file); 
        
         
        
    }//GEN-LAST:event_btnDownloadSurveyDataActionPerformed

    private void btnDownloadSurveyDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDownloadSurveyDataMouseClicked
        // TODO add your handling code here:
        //File file =new File("C:\\uploads\\Mayank.xls");
        //String file_name ="C:\\uploads\\Mayank.xls";
        //btnDownloadSurveyData.h;
       //ReadFile file = new ReadFile(file_name);
       //String aryLines = file.OpenFile();
        String surveyname = Survey.txtSurveyName.getText();
        try{  
          Runtime.getRuntime().exec("cmd /c start C:\\\"uploads\"\\"+surveyname+".xls");  
          }catch(IOException  e){
          } 
       System.out.println("Sanjay");
        System.out.println("cmd /c start C:\\uploads\\"+surveyname+".xls");
       
        
    }//GEN-LAST:event_btnDownloadSurveyDataMouseClicked

    
    
    //jTable1.refresh();
    
   // DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
   //model.AddRow();
   
     //SurveyDetails jTable1 = new SurveyDetails();
       // jTable1.setVisible(true);
        //table.setModel(buildTableModel(rs));  
    //((DefaultTableModel)table.getModel()).fireTableDataChanged(); // show changes  
 /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
       
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SurveyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SurveyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SurveyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SurveyDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SurveyDetails().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttachAction;
    private javax.swing.JTextField Document_path;
    private javax.swing.JButton Save_FileAction;
    private javax.swing.JButton btnDownloadSurveyData;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
