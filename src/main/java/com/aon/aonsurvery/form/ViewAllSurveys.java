package com.aon.aonsurvery.form ;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
//import net.proteanit.sql.DbUtils;

public class ViewAllSurveys extends javax.swing.JFrame {
Connection con=null;
ResultSet rs=null;
PreparedStatement pst=null;
    /**
     * Creates new form StudentTrainingRecord
     */
    public ViewAllSurveys() {
        initComponents();
        //setLocationRelativeTo(null);
        
        Toolkit tk = Toolkit.getDefaultToolkit();
      int xsize = (int) tk.getScreenSize().getWidth();
      int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, 700);
        this.setResizable(true);
        
        Get_data();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        txtSurveyName = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View All Surveys");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Survey"));

        txtSurveyName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSurveyNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(txtSurveyName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSurveyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.setColumnSelectionAllowed(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1151, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnReset)
                        .addGap(28, 28, 28)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void Get_data()
{
    //jTable1.getTableHeader().seth;
    //jTable1.getTableHeader().setPreferredSize(new Dimension(jTable1.getColumnModel().getTotalColumnWidth(), 52));
    
    
    jTable1.getTableHeader().setPreferredSize(new Dimension(jTable1.getWidth(), 34));
    //jTable1.getTableHeader().setPreferredSize(new Dimension(jTable1.getHeight(), 44));
    //jTable1.setAutoResizeMode(jTable1.getColumnModel());
   // jTable1.getColumnHeaderWidth();
    //jTable1.getColumnModel().setPreferredWidth();
    con=Connect.ConnectDB();
        String sql= "select d0 as [Year],SurveyName as [Survey Name],d1 as [Industry],d2 as [Country],d3 as [City],d4 as [Company Name],d5 as [Annual Revenue ($)],d6 as [Total Number of Full Time Employees],d7 as [Incumbent ID],d8 as [Incumbent Position Title],d9 as [Nationality of incumbent],d10 as [Function/Department],d11 as [Core/Shared Services],d12 as [Survey Job Title],d13 as [Survey Job Family],d14 as [Survey Job Sub-Family],d15 as [Career Path],d16 as [AH Level],d17 as [Survey Job Code],d18 as [Year of Hire],d19 as [Year of Birth],d20 as [Incumbent Internal Salary Grade],d21 as [Revenue/Budget Responsibility],d22 as [People Responsibility],d23 as [Annual Basic Salary ($)],d24 as [Number of Months Salary],d25 as [Eligibility for any variable bonus, short term incentive],d26 as [Target Variable Pay (as a % of base pay)],d27 as [Maximum Variable Pay (as a % of base pay)],d28 as [Target Variable Pay ($)],d29 as [Actual Variable Pay($)],d30 as [Eligibility for Housing],d31 as [Housing Cash Allowance ($)],d32 as [Cost of Housing to the Company ($)],d33 as [Eligibility for Education Allowance],d34 as [Education Allowance ($)],d35 as [Number of Children Covered by Education Allowance],d36 as [Transportation Allowance Eligibility],d37 as [Transportation Allowance Value ($)],d38 as [Consolidated Allowances  ($)],d39 as [Hardship Allowance ($)],d40 as [Other Allowance 1- Type],d41 as [Other Allowance 1- Amount ($)],d42 as [Other Allowance 2 - Type],d43 as [Other Allowance (2) - Amount ($)],d44 as [Other Allowance 3 - Type],d45 as [Other Allowance 3 - Amount ($)],d46 as [Other Allowance 4 - Type],d47 as [Other Allowance 4 - Amount ($)],d48 as [Other Allowance 5 - Type],d49 as [Other Allowance 5 - Amount ($)],d50 as [Other Allowance 6 - Type],d51 as [Other Allowance 6 - Amount ($)],d52 as [Other Allowance 7 - Type],d53 as [Other Allowance 7 - Amount ($)],d54 as [Other Allowance 8 - Type],d55 as [Other Allowance 8 - Amount ($)],d56 as [Other Allowance 9 - Type],d57 as [Other Allowance 9 - Amount ($)],d58 as [Other Allowance 10 - Type],d59 as [Other Allowance 10 - Amount ($)],d60 as [Other Allowance 11 - Type],d61 as [Other Allowance 11 - Amount ($)],d62 as [Other Allowance 12 - Type],d63 as [Other Allowance 12 - Amount ($)],d64 as [Other Allowance 13 - Type],d65 as [Other Allowance 13 - Amount ($)],d66 as [Other Allowance 14 - Type],d67 as [Other Allowance 14 - Amount ($)],d68 as [Other Allowance 15 - Type],d69 as [Other Allowance15 - Amount ($)],d70 as [LTI-1  Eligibity],d71 as [LTI-1  Vehicle type],d72 as [LTI-1  performance metric],d73 as [LTI-1 - Durantion of the total vesting/performance period],d74 as [LTI-1  grant frequeny],d75 as [On-target level of the LTI-1  as a % of basic pay],d76 as [Maximum level of the LTI-1  as a % of basic pay],d77 as [The date on which the company last awarded this LTI-1],d78 as [LTI-1 Number of shares or options granted (if applicable)],d79 as [LTI-1 Share price at the most recent grant date ($)],d80 as [LTI-1 Exercise price for the most recent grant ($)],d81 as [LTI-1 Duration before an option expires (if applicable)],d82 as [LTI-2 Eligibity],d83 as [LTI-2 Vehicle type],d84 as [LTI-2 performance metric],d85 as [LTI-2 - Durantion of the total vesting/performance period],d86 as [LTI-2 grant frequeny],d87 as [On-target level of the LTI-2 as a % of basic pay],d88 as [Maximum level of the LTI-2 as a % of basic pay],d89 as [The date on which the company last awarded this LTI-2 plan],d90 as [LTI-2 Number of shares or options granted at the most],d91 as [LTI-2 Share price at the most recent grant date ($)],d92 as [LTI-2 Exercise price for the most recent grant ($)],d93 as [LTI-2 Duration before an option expires (if applicable)],d94 as [LTI-3 Eligibity],d95 as [LTI-3 Vehicle type],d96 as [LTI-3 performance metric],d97 as [LTI-3-Durantion of the total vesting/performance period],d98 as [LTI-3 grant frequeny],d99 as [On-target level of the LTI-3  as a % of basic pay],d100 as [Maximum level of the LTI-3  as a % of basic pay],d101 as [The date on which the company last awarded this LTI-3  plan],d102 as [LTI-3 Number of shares or options granted at the most recent],d103 as [LTI-3 Share price at the most recent grant date ($)],d104 as [LTI-3 Exercise price for the most recent grant($)],d105 as [LTI-3 Duration before an option expires (if applicable)],d106 as [LTI-4 Eligibity],d107 as [LTI-4 Vehicle type],d108 as [LTI-3 Exercise price for the most recent grant ($)],d109 as [LTI-3 Duration before an option expires],d110 as [LTI-4  Eligibity],d111 as [LTI-4  Vehicle type],d112 as [LTI-4 performance metric],d113 as [LTI-4 - Durantion of the total vesting/performance period],d114 as [LTI-4 grant frequeny],d115 as [On-target level of the LTI-4 as a % of basic pay],d116 as [Maximum level of the LTI-4 as a % of basic pay],d117 as [The date on which the company last awarded this LTI-4 plan],d118 as [LTI-4 Number of shares or options granted at the most],d119 as [LTI-4 Share price at the most recent grant date($)],d120 as [LTI-4 Exercise price for the most recent grant($)],d121 as [LTI-4 Duration before an option expires (if applicable)] from SurveyData order by SurveyName"; // 
try{
          pst=con.prepareStatement(sql);
          rs= pst.executeQuery();
//         jTable1.setModel(DbUtils.resultSetToTableModel(rs));
         }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
         }
}
    private void txtSurveyNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSurveyNameActionPerformed
        con=Connect.ConnectDB();
        String sql= "select d0 as [Year],SurveyName as [Survey Name],d1 as [Industry],d2 as [Country],d3 as [City],d4 as [Company Name],d5 as [Annual Revenue ($)],d6 as [Total Number of Full Time Employees],d7 as [Incumbent ID],d8 as [Incumbent Position Title],d9 as [Nationality of incumbent],d10 as [Function/Department],d11 as [Core/Shared Services],d12 as [Survey Job Title],d13 as [Survey Job Family],d14 as [Survey Job Sub-Family],d15 as [Career Path],d16 as [AH Level],d17 as [Survey Job Code],d18 as [Year of Hire],d19 as [Year of Birth],d20 as [Incumbent Internal Salary Grade],d21 as [Revenue/Budget Responsibility],d22 as [People Responsibility],d23 as [Annual Basic Salary ($)],d24 as [Number of Months Salary],d25 as [Eligibility for any variable bonus, short term incentive],d26 as [Target Variable Pay (as a % of base pay)],d27 as [Maximum Variable Pay (as a % of base pay)],d28 as [Target Variable Pay ($)],d29 as [Actual Variable Pay($)],d30 as [Eligibility for Housing],d31 as [Housing Cash Allowance ($)],d32 as [Cost of Housing to the Company ($)],d33 as [Eligibility for Education Allowance],d34 as [Education Allowance ($)],d35 as [Number of Children Covered by Education Allowance],d36 as [Transportation Allowance Eligibility],d37 as [Transportation Allowance Value ($)],d38 as [Consolidated Allowances  ($)],d39 as [Hardship Allowance ($)],d40 as [Other Allowance 1- Type],d41 as [Other Allowance 1- Amount ($)],d42 as [Other Allowance 2 - Type],d43 as [Other Allowance (2) - Amount ($)],d44 as [Other Allowance 3 - Type],d45 as [Other Allowance 3 - Amount ($)],d46 as [Other Allowance 4 - Type],d47 as [Other Allowance 4 - Amount ($)],d48 as [Other Allowance 5 - Type],d49 as [Other Allowance 5 - Amount ($)],d50 as [Other Allowance 6 - Type],d51 as [Other Allowance 6 - Amount ($)],d52 as [Other Allowance 7 - Type],d53 as [Other Allowance 7 - Amount ($)],d54 as [Other Allowance 8 - Type],d55 as [Other Allowance 8 - Amount ($)],d56 as [Other Allowance 9 - Type],d57 as [Other Allowance 9 - Amount ($)],d58 as [Other Allowance 10 - Type],d59 as [Other Allowance 10 - Amount ($)],d60 as [Other Allowance 11 - Type],d61 as [Other Allowance 11 - Amount ($)],d62 as [Other Allowance 12 - Type],d63 as [Other Allowance 12 - Amount ($)],d64 as [Other Allowance 13 - Type],d65 as [Other Allowance 13 - Amount ($)],d66 as [Other Allowance 14 - Type],d67 as [Other Allowance 14 - Amount ($)],d68 as [Other Allowance 15 - Type],d69 as [Other Allowance15 - Amount ($)],d70 as [LTI-1  Eligibity],d71 as [LTI-1  Vehicle type],d72 as [LTI-1  performance metric],d73 as [LTI-1 - Durantion of the total vesting/performance period],d74 as [LTI-1  grant frequeny],d75 as [On-target level of the LTI-1  as a % of basic pay],d76 as [Maximum level of the LTI-1  as a % of basic pay],d77 as [The date on which the company last awarded this LTI-1],d78 as [LTI-1 Number of shares or options granted (if applicable)],d79 as [LTI-1 Share price at the most recent grant date ($)],d80 as [LTI-1 Exercise price for the most recent grant ($)],d81 as [LTI-1 Duration before an option expires (if applicable)],d82 as [LTI-2 Eligibity],d83 as [LTI-2 Vehicle type],d84 as [LTI-2 performance metric],d85 as [LTI-2 - Durantion of the total vesting/performance period],d86 as [LTI-2 grant frequeny],d87 as [On-target level of the LTI-2 as a % of basic pay],d88 as [Maximum level of the LTI-2 as a % of basic pay],d89 as [The date on which the company last awarded this LTI-2 plan],d90 as [LTI-2 Number of shares or options granted at the most],d91 as [LTI-2 Share price at the most recent grant date ($)],d92 as [LTI-2 Exercise price for the most recent grant ($)],d93 as [LTI-2 Duration before an option expires (if applicable)],d94 as [LTI-3 Eligibity],d95 as [LTI-3 Vehicle type],d96 as [LTI-3 performance metric],d97 as [LTI-3-Durantion of the total vesting/performance period],d98 as [LTI-3 grant frequeny],d99 as [On-target level of the LTI-3  as a % of basic pay],d100 as [Maximum level of the LTI-3  as a % of basic pay],d101 as [The date on which the company last awarded this LTI-3  plan],d102 as [LTI-3 Number of shares or options granted at the most recent],d103 as [LTI-3 Share price at the most recent grant date ($)],d104 as [LTI-3 Exercise price for the most recent grant($)],d105 as [LTI-3 Duration before an option expires (if applicable)],d106 as [LTI-4 Eligibity],d107 as [LTI-4 Vehicle type],d108 as [LTI-3 Exercise price for the most recent grant ($)],d109 as [LTI-3 Duration before an option expires],d110 as [LTI-4  Eligibity],d111 as [LTI-4  Vehicle type],d112 as [LTI-4 performance metric],d113 as [LTI-4 - Durantion of the total vesting/performance period],d114 as [LTI-4 grant frequeny],d115 as [On-target level of the LTI-4 as a % of basic pay],d116 as [Maximum level of the LTI-4 as a % of basic pay],d117 as [The date on which the company last awarded this LTI-4 plan],d118 as [LTI-4 Number of shares or options granted at the most],d119 as [LTI-4 Share price at the most recent grant date($)],d120 as [LTI-4 Exercise price for the most recent grant($)],d121 as [LTI-4 Duration before an option expires (if applicable)] from SurveyData where SurveyName like '" + txtSurveyName.getText() + "%' order by SurveyName";
    try{
    pst=con.prepareStatement(sql);
            rs= pst.executeQuery();
//            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_txtSurveyNameActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtSurveyName.setText("");
        Get_data();
        txtSurveyName.requestDefaultFocus();
    }//GEN-LAST:event_btnResetActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        /*
        try{
            con=Connect.ConnectDB();
            this.hide();
            Report4 frm= new Report4();
            frm.setVisible(true);
            int row= jTable1.getSelectedRow();
             String add= jTable1.getModel().getValueAt(row,0).toString();
             frm.txtID.setText(add);
             String add1= jTable1.getModel().getValueAt(row,1).toString();
             frm.txtScholarNo.setText(add1);
             String add2= jTable1.getModel().getValueAt(row,2).toString();
             frm.txtEnrollmentNo.setText(add2);
             String add3= jTable1.getModel().getValueAt(row,3).toString();
             frm.txtStudentName.setText(add3);
              String add4= jTable1.getModel().getValueAt(row,4).toString();
             frm.txtSession.setText(add4);
              String add5= jTable1.getModel().getValueAt(row,5).toString();
             frm.txtCourse.setText(add5);
              String add6= jTable1.getModel().getValueAt(row,6).toString();
             frm.txtBranch.setText(add6);
              String add7= jTable1.getModel().getValueAt(row,7).toString();
             frm.txtCompanyName.setText(add7);
              String add8= jTable1.getModel().getValueAt(row,8).toString();
             frm.txtAddress.setText(add8);
              String add9= jTable1.getModel().getValueAt(row,9).toString();
             frm.txtContactNo.setText(add9);
              String add10= jTable1.getModel().getValueAt(row,10).toString();
             frm.txtEmail.setText(add10); 
             String add11= jTable1.getModel().getValueAt(row,11).toString();
             frm.txtDurartion.setText(add11);
             frm.btnUpdate.setEnabled(true);
             frm.btnDelete.setEnabled(true);
             frm.btnSave.setEnabled(false);

        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,ex);
        }
        */
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       /*
        this.hide();
       Report4 frm = new Report4();
       frm.setVisible(true);
        */
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewAllSurveys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewAllSurveys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewAllSurveys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewAllSurveys.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewAllSurveys().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReset;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSurveyName;
    // End of variables declaration//GEN-END:variables
}
